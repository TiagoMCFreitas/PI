

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Main.java to edit this template
 */
package javaapplication1;



import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import javax.swing.*;



public class JogoDaVelha extends JFrame {
    JLabel vez = new JLabel("Vez do Jogador 1");
    JButton[] bt = new JButton[9];
    boolean[] click = new boolean[9];
    boolean xo = false;
    JLabel placar = new JLabel("Placar");
    JLabel px = new JLabel("X: 0");
    JLabel po = new JLabel("O: 0");
    JButton novo = new JButton("Novo jogo");
    JLabel vencedor = new JLabel(" ");
    int PX = 0;
    int PO = 0;
    int PE = 0;
    int o = 0;
    JLabel pe = new JLabel("E: 0");
    int result[][] = new int[2][5];
    int resultI[][] = new int [2][5];
    int resultT[][] = new int[5][2];
    int resultD[][] = new int [2][5];
    int resultE[][] = new int [2][5];
    int resultF[][] = new int [2][2];
    int B1 = 0;
    int aux = 0;
    int aux2 = 0;
    int O1 = 0;
    int H1 = 0;
    String b = " ";
    String nome = null;
    String nome2 = null;
    int r = 0; 
    
    public JogoDaVelha(){
        
        setVisible(true);
        setTitle("Jogo da velha");
        setDefaultCloseOperation(3);
        setLayout(null);
        int cont = 0;
        setBounds(360, 190, 700, 500);
        add(placar);
        placar.setForeground(Color.GREEN);
        add(px);
        add(po);
        add(pe);
        add(novo);
        novo.setBackground(Color.WHITE);
        novo.setForeground(Color.BLACK);
        add(vencedor);
        add(vez);
        placar.setBounds(445, 50, 100, 30);
        px.setBounds(400, 75, 100, 30);
        po.setBounds(450, 75, 100, 30);
        pe.setBounds(500, 75, 100, 30);
        vencedor.setBounds(370, 120 ,500,30);
        novo.setBounds(418, 150, 100,100);
        vez.setBounds(420, 250, 100, 100);
        
        novo.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if(PX > PO){
                r = 0;    
                }
                if(PO > PX){
                r = 1;    
                }
                if(PO == PX && r % 2 == 0){
                r = 1;    
                }
                if(PO == PX && r % 2 != 0){
                r = 1;    
                }
                limpar();
                PX = 0;
                PO = 0;
                PE = 0;
                zerarMatriz();
                atualizar(); 
                nomes();
            }
        });
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                bt[cont] = new JButton();
                add(bt[cont]);
                bt[cont].setFont(new Font("Monospaced", Font.ITALIC + Font.BOLD, 40));
                bt[cont].setForeground(Color.BLACK);
                bt[cont].setBounds((100 * i) + 45, (100 * j) + 45, 85, 85);
                cont++;
                
            }
        }
        
        for (int i = 0; i < 9; i++) {
            click[i] = false;
            bt[i].setBackground(Color.GRAY);
        }
        bt[0].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (click[0] == false) {
                    bt[0].setBackground(Color.WHITE);
                    click[0] = true;
                    mudar(bt[0]);
                    
                    
                }
            }
        });
        bt[1].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (click[1] == false) {
                    bt[1].setBackground(Color.WHITE);
                    click[1] = true;
                    mudar(bt[1]);
                    
                }
            }
        });
        bt[2].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (click[2] == false) {
                     bt[2].setBackground(Color.WHITE);
                    click[2] = true;
                    mudar(bt[2]);
                }
            }
        });
        bt[3].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (click[3] == false) {
                    bt[3].setBackground(Color.WHITE);
                    click[3] = true;
                    mudar(bt[3]);
                }
            }
        });
        bt[4].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (click[4] == false) {
                    bt[4].setBackground(Color.WHITE);
                    click[4] = true;
                    mudar(bt[4]);
                }
            }
        });
        bt[5].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (click[5] == false) {
                    bt[5].setBackground(Color.WHITE);
                    click[5] = true;
                    mudar(bt[5]);
                }
            }
        });
        bt[6].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (click[6] == false) {
                    bt[6].setBackground(Color.WHITE);
                    click[6] = true;
                    mudar(bt[6]);
                }
            }
        });
        bt[7].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (click[7] == false) {
                    bt[7].setBackground(Color.WHITE);
                    click[7] = true;
                    mudar(bt[7]);
                }
            }
        });
        bt[8].addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                if (click[8] == false) {
                    bt[8].setBackground(Color.WHITE);
                    click[8] = true;
                    mudar(bt[8]);
                }
            }
        });

        nome = JOptionPane.showInputDialog(null,"Insira seu nome, jogador 1: ");
        nome2 = JOptionPane.showInputDialog(null,"Insira seu nome, jogador 2: ");
    
    }
    
   
    public void mudar(JButton btn) {
        if (xo) {
            btn.setText("O");
            btn.setForeground(Color.RED);
            xo = false;

        } else {
            btn.setText("X");
            btn.setForeground(Color.GREEN);
            xo = true;
            
        }
        ganhou();
    }
    public void atualizar(){
        
        if(r % 2 == 0){
        vez.setText("Vez do jogador 2 ");
        }
        if(r % 2 != 0){
        vez.setText("Vez do jogador 1 ");    
        }
        r++;
        px.setText("X: " + PX);
        po.setText("O: " + PO);
        pe.setText("E: " + PE);
        if(o == 4 && PX > PO){
        vencedor.setText("Parabéns " + nome +" venceu a partida!");    
        
        }
        
        else if(o == 4 && PO > PX){
        vencedor.setText("Parabéns " + nome2 + " venceu a partida!");        
        
        }
        
        
        if(o == 0 && PO == PX){
         vencedor.setText(" ");
     }   
    }
            
    public void ganhou() {
       int cont = 0;
        for(int i = 0 ; i<9 ; i++){
           if(click[i] == true){
               cont++;
          
           }
        }
        if ((bt[0].getText() == "X" && bt[1].getText() == "X" && bt[2].getText() == "X")
                || (bt[3].getText() == "X" && bt[4].getText() == "X" && bt[5].getText() == "X")
                || (bt[6].getText() == "X" && bt[7].getText() == "X" && bt[8].getText() == "X")
                || (bt[0].getText() == "X" && bt[3].getText() == "X" && bt[6].getText() == "X")
                || (bt[1].getText() == "X" && bt[4].getText() == "X" && bt[7].getText() == "X")
                || (bt[2].getText() == "X" && bt[5].getText() == "X" && bt[8].getText() == "X")
                || (bt[0].getText() == "X" && bt[4].getText() == "X" && bt[8].getText() == "X")
                || (bt[6].getText() == "X" && bt[4].getText() == "X" && bt[2].getText() == "X")) {
            JOptionPane.showMessageDialog(null, nome + " ganhou");
            PX += 5;
            limpar ();
            atualizar();
            result[0][o] = PX;
            result[1][o] = PO;
            aparecer();
            aparecer2();
            aparecer3();
            aparecer4();
            aparecer5();
            aparecer6();
            aparecer7();
            aparecer8();
            aparecer9();
            o++; 
        }else if ((bt[0].getText() == "O" && bt[1].getText() == "O" && bt[2].getText() == "O")
                || (bt[3].getText() == "O" && bt[4].getText() == "O" && bt[5].getText() == "O")
                || (bt[6].getText() == "O" && bt[7].getText() == "O" && bt[8].getText() == "O")
                || (bt[0].getText() == "O" && bt[3].getText() == "O" && bt[6].getText() == "O")
                || (bt[1].getText() == "O" && bt[4].getText() == "O" && bt[7].getText() == "O")
                || (bt[2].getText() == "O" && bt[5].getText() == "O" && bt[8].getText() == "O")
                || (bt[0].getText() == "O" && bt[4].getText() == "O" && bt[8].getText() == "O")
                || (bt[6].getText() == "O" && bt[4].getText() == "O" && bt[2].getText() == "O")) {
            JOptionPane.showMessageDialog(null, nome2 + " ganhou");
            PO += 5;
            limpar();
            atualizar();
            result[1][o] = PO;
            result[0][o] = PX;
            aparecer();
            aparecer2();
            aparecer3();
            aparecer4();
            aparecer5();
            aparecer6();
            aparecer7();
            aparecer8();
            aparecer9();
            o++;
            
        }else if (cont == 9){
             JOptionPane.showMessageDialog(null, "Empate");
             
             PO = PO + 2;
             PX = PX + 2;
             result[0][o] = PX;
             result[1][o] = PO;
             PE++;
             limpar();
             atualizar();
             aparecer();
             aparecer2();
             aparecer3();
             aparecer4();
             aparecer5();
             aparecer6();
             aparecer7();
             aparecer8();
             aparecer9();
             o++;
             empatou();
             
        }
     }

    
    
    public void limpar() {
        for(int i = 0 ;i < 9 ; i++){
            bt[i]. setText(" ");
            click[i] = false;
            bt[i].setBackground(Color.GRAY);
        }
    }
    
    public void nomes(){
    nome = JOptionPane.showInputDialog(null,"Insira seu nome, jogador 1: ");
    nome2 = JOptionPane.showInputDialog(null,"Insira seu nome, jogador 2: ");
    
    
    }
        
    
    public void aparecer(){
        if(o == 4 && PX > PO ){
        JOptionPane.showMessageDialog(null, "resultado " + nome + "\n " + "[" + result[0][0] + "]"+ " " +" ["+ result[0][1]+"] " + " " +" ["+ result[0][2] +"] " + " " + " [" + result[0][3] +"] " + " " + " [" + result [0][4] + "]\n" + "resultado" + nome2 + "\n " + "[" + result[1][0] + "]"+ " " +" ["+ result[1][1]+"] " + " " +" ["+ result[1][2] +"] " + " " + " [" + result[1][3] +"] " + " " + " [" + result [1][4] + "]"); 
        }
        if(o == 4 && PX < PO){
        JOptionPane.showMessageDialog(null, "resultado " + nome + "\n " + "[" + result[0][0] + "]"+ " " +" ["+ result[0][1]+"] " + " " +" ["+ result[0][2] +"] " + " " + " [" + result[0][3] +"] " + " " + " [" + result [0][4] + "]\n" + "resultado " + nome2 + " \n " + "[" + result[1][0] + "]"+ " " +" ["+ result[1][1]+"] " + " " +" ["+ result[1][2] +"] " + " " + " [" + result[1][3] +"] " + " " + " [" + result [1][4] + "]"); 
        }
        
    }
    
    public void aparecer2(){
        if(o < 5){
        for(int i = 0 ; i < 5; i++){
            resultI[0][4 - i] = result[0][i];
          }
        for(int j = 0 ; j < 5; j++){
             resultI[1][4 - j] =  result[1][j]; 
        }
        
        if(o == 4 && PX > PO){     
        JOptionPane.showMessageDialog(null, "Matriz com valores inversos:\n " +  "[" + resultI[0][0] + "]"+ " " +" ["+ resultI[0][1]+"] " + " " +" ["+ resultI[0][2] +"] " + " " + " [" + resultI[0][3] +"] " + " " + " [" + resultI [0][4] + "]\n" + "\n " + "[" + resultI[1][0] + "]"+ " " +" ["+ resultI[1][1]+"] " + " " +" ["+ resultI[1][2] +"] " + " " + " [" + resultI[1][3] +"] " + " " + " [" + resultI[1][4] + "]");
        }
        if(o == 4 && PO > PX){     
        JOptionPane.showMessageDialog(null, "Matriz com valores inversos:\n " +  "[" + resultI[0][0] + "]"+ " " +" ["+ resultI[0][1]+"] " + " " +" ["+ resultI[0][2] +"] " + " " + " [" + resultI[0][3] +"] " + " " + " [" + resultI [0][4] + "]\n" + "\n " + "[" + resultI[1][0] + "]"+ " " +" ["+ resultI[1][1]+"] " + " " +" ["+ resultI[1][2] +"] " + " " + " [" + resultI[1][3] +"] " + " " + " [" + resultI[1][4] + "]");
        }
     }
    }    
    
    public void aparecer3(){
        for(int i = 0 ; i < 5 ; i++){
            resultT[i][0] = result[0][i]; 
            
        }
        for(int j = 0 ; j < 5 ; j++){
             resultT[j][1] = result[1][j];
        }
        if(o == 4 && PX > PO){
        JOptionPane.showMessageDialog(null, "Matriz transposta:\n " +  "[" + resultT[0][0] + "]"+ " " +"["+ resultT[0][1]+"]\n" + " " +"["+ resultT[1][0] +"]" + " " + "[" + resultT[1][1] +"]\n" + " " + "[" + resultT [2][0] + "]" + " " + "[" + resultT[2][1] + "]\n"+ " " +"["+ resultT[3][0]+"]" + " " +"["+ resultT[3][1] +"]\n" + "["+ resultT[4][0]+"]" + " " +"["+ resultT[4][1] +"]");
        }
        if(o == 4 && PO > PX){ 
        JOptionPane.showMessageDialog(null, "Matriz transposta:\n " +  "[" + resultT[0][0] + "]"+ " " +"["+ resultT[0][1]+"]\n" + " " +"["+ resultT[1][0] +"]" + " " + "[" + resultT[1][1] +"]\n" + " " + "[" + resultT [2][0] + "]" + " " + "[" + resultT[2][1] + "]\n"+ " " +"["+ resultT[3][0]+"]" + " " +"["+ resultT[3][1] +"]\n"+"["+ resultT[4][0]+"]" + " " +"["+ resultT[4][1] +"]");
        }
    }
      public void aparecer4(){
       for(int i = 0 ; i < 5 ; i++){
           resultD[0][i] = result[0][i] + resultI[0][i]; 
       }   
       for(int j = 0 ; j < 5 ; j++){   
           resultD[1][j] = result[1][j] + resultI[1][j]; 
      }
      if(o == 4 && PX > PO){
      JOptionPane.showMessageDialog(null, "Matriz soma:\n " +  "[" + resultD[0][0] + "]"+ " " +" ["+ resultD[0][1]+"] " + " " +" ["+ resultD[0][2] +"] " + " " + " [" + resultD[0][3] +"] " + " " + " [" + resultD [0][4] + "]\n" + "\n " + "[" + resultD[1][0] + "]"+ " " +" ["+ resultD[1][1]+"] " + " " +" ["+ resultD[1][2] +"] " + " " + " [" + resultD[1][3] +"] " + " " + " [" + resultD[1][4] + "]");
      }
      if(o == 4 && PX < PO){
      JOptionPane.showMessageDialog(null, "Matriz soma:\n " +  "[" + resultD[0][0] + "]"+ " " +" ["+ resultD[0][1]+"] " + " " +" ["+ resultD[0][2] +"] " + " " + " [" + resultD[0][3] +"] " + " " + " [" + resultD [0][4] + "]\n" + "\n " + "[" + resultD[1][0] + "]"+ " " +" ["+ resultD[1][1]+"] " + " " +" ["+ resultD[1][2] +"] " + " " + " [" + resultD[1][3] +"] " + " " + " [" + resultD[1][4] + "]");
      }
      
      }
      public void aparecer5(){
          for(int i = 0 ; i < 5 ; i++){
           resultE[0][i] = result[0][i] - resultI[0][i];
           
       }   
          for(int j = 0 ; j < 5 ; j++){   
           resultE[1][j] = result[1][j] - resultI[1][j];
      }
      if(o == 4 && PX > PO){
      JOptionPane.showMessageDialog(null, "Matriz subtração:\n " +  "[" + resultE[0][0] + "]"+ " " +" ["+ resultE[0][1]+"] " + " " +" ["+ resultE[0][2] +"] " + " " + " [" + resultE[0][3] +"] " + " " + " [" + resultE [0][4] + "]\n" + "\n " + "[" + resultE[1][0] + "]"+ " " +" ["+ resultE[1][1]+"] " + " " +" ["+ resultE[1][2] +"] " + " " + " [" + resultE[1][3] +"] " + " " + " [" + resultE[1][4] + "]");
      }
      if(o == 4 && PX < PO){
      JOptionPane.showMessageDialog(null, "Matriz subtração:\n " +  "[" + resultE[0][0] + "]"+ " " +" ["+ resultE[0][1]+"] " + " " +" ["+ resultE[0][2] +"] " + " " + " [" + resultE[0][3] +"] " + " " + " [" + resultE [0][4] + "]\n" + "\n " + "[" + resultE[1][0] + "]"+ " " +" ["+ resultE[1][1]+"] " + " " +" ["+ resultE[1][2] +"] " + " " + " [" + resultE[1][3] +"] " + " " + " [" + resultE[1][4] + "]");
      }
      }
      
      public void aparecer6(){
      
      resultF[0][0] = 0;
      for(int i = 0 ; i < 5 ; i++){
         resultF[0][0] = result[0][i] * resultT[i][0] + resultF[0][0];  
      }  
      resultF[0][1] = 0;
      for(int j = 0 ;j < 5 ; j++){
          resultF[0][1] = result[1][j] * resultT[j][1] + resultF[0][1];
      }
      resultF[1][0] = 0;
      for(int k = 0 ; k < 5 ; k++){
         resultF[1][0] = result[0][k] * resultT[k][1] + resultF[1][0];  
      }  
      resultF[1][1] = 0;
      for(int n = 0 ;n < 5 ; n++){
          resultF[1][1] = result[1][n] * resultT[n][0] + resultF[1][1];
      }
      
      if(o == 4 && PX > PO){
      JOptionPane.showMessageDialog(null, "Matriz multiplicação:\n " +  "[" + resultF[0][0] + "]"+ " " +" ["+ resultF[1][0]+"] " + "\n " +" ["+ resultF[0][1] +"] " + " " + " [" + resultF[1][1] +" ]"); 
      }
      if(o == 4 && PO > PX){
      JOptionPane.showMessageDialog(null, "Matriz multiplicação:\n " +  "[" + resultF[0][0] + "]"+ " " +" ["+ resultF[1][0]+"] " + "\n " +" ["+ resultF[0][1] +"] " + " " + " [" + resultF[1][1] +" ]");
      }
      }
      
      public void aparecer7(){
         
           B1 = B1 + result[0][o] + result[1][o];
           b = Integer.toBinaryString(B1);
           
           if(o == 4 && PX > PO){

           JOptionPane.showMessageDialog(null,"soma: " + B1 + " \nbinário: " + b);
           }
           if(o == 4 && PO > PX){
           JOptionPane.showMessageDialog(null," soma: " + B1 + " \nbinário: " + b);
                   
           } 
            
         
      }    
    public void aparecer8(){
        O1 = B1;
        if(o == 4 && PX < PO){
        JOptionPane.showMessageDialog(null,"octal: " + Integer.toOctalString(O1));
        }
        if(o == 4 && PX > PO){
        JOptionPane.showMessageDialog(null,"octal: " + Integer.toOctalString(O1));   
       
        }
        
    }
    public void aparecer9(){
        H1 = B1;
        if(o == 4 && PX < PO){
        JOptionPane.showMessageDialog(null,"Hexadecimal: " + Integer.toHexString(H1));
        JOptionPane.showMessageDialog(null, "O jogo foi finalizado, pressione o Botão de (Novo jogo)");
        }
        if(o == 4 && PX > PO){
        JOptionPane.showMessageDialog(null,"Hexadecimal: " + Integer.toHexString(H1));   
        JOptionPane.showMessageDialog(null, "O jogo foi finalizado, pressione o Botão de (Novo jogo)");  
    }     
    }    

        
    public void zerarMatriz (){
        
            for(int i = 0 ; i < 5 ; i++){
                result[0][i] = 0;
            }
            for(int j = 0 ; j < 5 ; j++){
                result[1][j] = 0;
            }
            for(int i = 0 ; i < 5 ; i++){
                resultI[0][i] = 0;
            }
            for(int j = 0 ; j < 5 ; j++){
                resultI[1][j] = 0;
            }
            for(int i = 0 ; i < 5 ; i++){
                resultT[i][0] = 0;
            }
            for(int j = 0 ; j < 5 ; j++){
                resultT[j][1] = 0;
            }
            for(int i = 0 ; i < 5 ; i++){
                resultD[0][i] = 0;
            }
            for(int j = 0 ; j < 5 ; j++){
                resultD[1][j] = 0;
            }
            for(int i = 0 ; i < 5 ; i++){
                resultE[0][i] = 0;
            }
            for(int j = 0 ; j < 5 ; j++){
                resultE[1][j] = 0;
            }
            for(int i = 0 ; i < 2; i++){
                resultF[0][i] = 0;
            }
             for(int j = 0 ; j < 2; j++){
                resultF[1][j] = 0;
            }
            B1 = 0;
            o = 0;
            JOptionPane.showMessageDialog(null,"Seu jogo foi reiniciado!","Jogo Reiniciado",JOptionPane.WARNING_MESSAGE);
    }
        
    public void empatou(){
        if(o == 5 && PX == PO){
            vencedor.setText("EMPATOUUU!!!! ");
            JOptionPane.showMessageDialog(null, "resultado " + nome + "\n " + "[" + result[0][0] + "]"+ " " +" ["+ result[0][1]+"] " + " " +" ["+ result[0][2] +"] " + " " + " [" + result[0][3] +"] " + " " + " [" + result [0][4] + "]\n" + "resultado "+ nome2 + "\n " + "[" + result[1][0] + "]"+ " " +" ["+ result[1][1]+"] " + " " +" ["+ result[1][2] +"] " + " " + " [" + result[1][3] +"] " + " " + " [" + result [1][4] + "]");
            JOptionPane.showMessageDialog(null, "Matriz inversa:\n " +  "[" + resultI[0][0] + "]"+ " " +" ["+ resultI[0][1]+"] " + " " +" ["+ resultI[0][2] +"] " + " " + " [" + resultI[0][3] +"] " + " " + " [" + resultI [0][4] + "]\n" + "\n " + "[" + resultI[1][0] + "]"+ " " +" ["+ resultI[1][1]+"] " + " " +" ["+ resultI[1][2] +"] " + " " + " [" + resultI[1][3] +"] " + " " + " [" + resultI[1][4] + "]");
            JOptionPane.showMessageDialog(null, "Matriz transposta:\n " +  "[" + resultT[0][0] + "]"+ " " +"["+ resultT[0][1]+"]\n" + " " +"["+ resultT[1][0] +"]" + " " + "[" + resultT[1][1] +"]\n" + " " + "[" + resultT [2][0] + "]" + " " + "[" + resultT[2][1] + "]\n"+ " " +"["+ resultT[3][0]+"]" + " " +"["+ resultT[3][1] +"]\n"+"["+ resultT[4][0]+"]" + " " +"["+ resultT[4][1] +"]");
            JOptionPane.showMessageDialog(null, "Matriz soma:\n " +  "[" + resultD[0][0] + "]"+ " " +" ["+ resultD[0][1]+"] " + " " +" ["+ resultD[0][2] +"] " + " " + " [" + resultD[0][3] +"] " + " " + " [" + resultD [0][4] + "]\n" + "\n " + "[" + resultD[1][0] + "]"+ " " +" ["+ resultD[1][1]+"] " + " " +" ["+ resultD[1][2] +"] " + " " + " [" + resultD[1][3] +"] " + " " + " [" + resultD[1][4] + "]");              JOptionPane.showMessageDialog(null, "Matriz subtração:\n " +  "[" + resultE[0][0] + "]"+ " " +" ["+ resultE[0][1]+"] " + " " +" ["+ resultE[0][2] +"] " + " " + " [" + resultE[0][3] +"] " + " " + " [" + resultE [0][4] + "]\n" + "\n " + "[" + resultE[1][0] + "]"+ " " +" ["+ resultE[1][1]+"] " + " " +" ["+ resultE[1][2] +"] " + " " + " [" + resultE[1][3] +"] " + " " + " [" + resultE[1][4] + "]");              JOptionPane.showMessageDialog(null, "Matriz multiplicação:\n " +  "[" + resultF[0][0] + "]"+ " " +" ["+ resultF[1][0]+"] " + "\n " +" ["+ resultF[0][1] +"] " + " " + " [" + resultF[1][1] +" ]");
            JOptionPane.showMessageDialog(null,"binário: " + b);
            JOptionPane.showMessageDialog(null,"octal: " + Integer.toOctalString(O1));   
            JOptionPane.showMessageDialog(null, "hexadecimal: " +  Integer.toHexString(H1));
            JOptionPane.showMessageDialog(null, "O jogo foi finalizado, pressione o Botão de (Novo jogo)");

        
        }   
    }
    public static void main(String[] args) {
        new JogoDaVelha();
    
        }
  }
